* What happens when you initialize a repository? Why do you need to do it?

The hidden .git directory is created which holds repository meta-info. 
This info is needed by git so it knows there's a repository.

* How is the staging area different from the working directory and the repository? 
  What value do you think it offers?

The staging area is a snapshot of some file(s) at the point where they're ready to
be committed.  Having a staging area allows you to collect together a number of
files that are logically related to a single commit.

* How can you use the staging area to make sure you have one commit per logical change?

All the edits that go together to make up a single logical change can be put in the staging area.
Unrelated changes can be left out, so they won't be part of the commit.

* What are some situations when branches would be helpful in keeping your history organized? 
  How would branches help?

Branches would be helpful when I want to make some changes that should be isolated from
the master version.  Maybe they are experimental, or temporary.

* How do the diagrams help you visualize the branch structure?

They allow you to see the history of what each branch contains, what they have in common
and what changes will be missing.

* What is the result of merging two branches together? 
  Why do we represent it in the diagram the way we do?

The result is a set of files containing all the changes from both branches.
The diagram shows the merged branch with two parents, and two sets of commit histories.

* What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?

Pros: takes care of most of the grunt work for the easy cases.
Cons: it could make mistakes as it has no understanding of the content.

